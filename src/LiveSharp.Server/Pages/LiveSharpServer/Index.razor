@page "/"
@using System.Collections.Concurrent

@implements IDisposable
@inject MatchmakingService MatchmakingService
@inject ServerLogger Logger

<div class="flex flex-col h-screen bg-gray-700 text-white">
    <div class="flex items-center px-4 text-sm shadow-md bg-gray-800 text-gray-300">
        <div class="py-2">
            <svg class="w-5 h-5 mr-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"/>
            </svg>
        </div>
        <div class="flex divide-x divide-gray-600">
            @foreach (var ws in _workspaces) {
                <div class="px-2 py-2 flex flex-row">
                    <div @onclick="() => SelectWorkspace(ws)" class="cursor-pointer text-gray-100 @(_currentWorkspace == ws ? "text-green-500" : "")">@ws.ProjectInfo.ProjectName</div>
                    <div class="pl-1 text-red-500 items-center flex opacity-100 group-hover:text-opacity-100 cursor-pointer hover:opacity-75" title="Terminate server process" @onclick="() => StopWorkspace(ws)">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" title="Terminate server process">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                        </svg>
                    </div>
                </div>
            }
        </div>
        <div class="justify-self-end">
            <label class="flex items-center gap-2">
                Launchpad mode
                @(IsLaunchpadMode ? "enabled" : "disabled")
            </label>
        </div>
    </div>

    <div class="flex-grow h-full overflow-y-auto">
        @if (_currentWorkspace == null) {
            <div class="p-4">
                <WelcomeBox/>
            </div>
        } else {
            <iframe class="w-screen h-full" src="@(_currentWorkspace.Address.serverAddress.Replace("[::]", "localhost.livesharp.net"))" />
        }
    </div>

  <LoggingBox />
</div>


@code {
    private IDisposable _workspaceSubscription;
    private IReadOnlyList<WorkspaceInfo> _workspaces = new WorkspaceInfo[0];
    private WorkspaceInfo _currentWorkspace;
    private bool IsLaunchpadMode => _currentWorkspace?.IsLaunchpadMode ?? false;

    protected override void OnInitialized()
    {
        _workspaces = MatchmakingService.GetWorkspaces();
        _workspaceSubscription = MatchmakingService
            .WorkspacesUpdated
            .Subscribe(WorkspacesUpdated);

        if (_workspaces.Count > 0)
            _currentWorkspace = _workspaces[0];
    }

    void WorkspacesUpdated(ConcurrentDictionary<string, WorkspaceInfo> workspaces)
    {
        InvokeAsync(() =>
        {
            _workspaces = workspaces.Values.ToArray();
            
            if (_currentWorkspace == null && _workspaces.Count > 0)
                _currentWorkspace = _workspaces[0];
            
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        _workspaceSubscription?.Dispose();
    }
    
    private void StopWorkspace(WorkspaceInfo workspace)
    {
        MatchmakingService.StopWorkspace(workspace);
    }
    
    private void SelectWorkspace(WorkspaceInfo ws)
    {
        _currentWorkspace = ws;
    }
}