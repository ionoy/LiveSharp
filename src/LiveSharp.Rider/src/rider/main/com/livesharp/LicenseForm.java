
package com.livesharp;

import com.intellij.ide.DataManager;
import com.intellij.openapi.actionSystem.PlatformDataKeys;
import com.intellij.openapi.ui.DialogWrapper;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import com.intellij.openapi.project.Project;

import javax.swing.*;
import java.awt.*;

public class LicenseForm {
    private JPanel myPanel;
    private JButton btnPurchase;
    private JCheckBox doNotShowStartupCheckBox;
    private JCheckBox updateEvenIfNotCheckBox;
    private JTextField txtEmail;
    private JPasswordField txtPassword;
    private JButton btnCopyKey;
    private JButton btnLoad;
    private JLabel lblStatus2;
    private JLabel lblStatus;
    private JLabel lblLimit;

    public LicenseForm() {

        try {

            if (btnCopyKey != null) {
                btnCopyKey.addActionListener(e -> {
                    showExpiration();
                });
            }
            if (btnPurchase != null) {
                btnPurchase.addActionListener(e -> {
                    JOptionPane.showMessageDialog(null, "Purchase", "Debug", JOptionPane.INFORMATION_MESSAGE);
                });
            }
            if (btnLoad != null) {
                btnLoad.addActionListener(e -> {
                    showNews();
                });
            }
        } catch (Exception ex) {
            String str = ex.getMessage();

        }
    }

    void showNews() {

        DialogWrapper dialogWrapper = new DialogWrapper(PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myPanel))) {
            {
                init();
            }

            @Nullable
            @Override
            protected JComponent createCenterPanel() {
                return new NewsForm().getPanel();
            }
        };

        dialogWrapper.setTitle("LiveSharp News");
        dialogWrapper.showAndGet();
    }

    void showExpiration() {

        DialogWrapper dialogWrapper = new DialogWrapper(PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myPanel))) {
            {
                init();
            }

            @Nullable
            @Override
            protected JComponent createCenterPanel() {
                return new ExpirationForm().getPanel();
            }
        };

        dialogWrapper.setTitle("LiveSharp Trial Expiration");
        dialogWrapper.showAndGet();
    }

    JPanel getPanel() {
        return myPanel;
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        myPanel = new JPanel();
        myPanel.setLayout(new GridLayoutManager(10, 3, new Insets(5, 5, 5, 5), -1, -1));
        lblStatus = new JLabel();
        lblStatus.setText("Trial period has expired");
        myPanel.add(lblStatus, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblLimit = new JLabel();
        Font lblLimitFont = this.$$$getFont$$$(null, -1, 12, lblLimit.getFont());
        if (lblLimitFont != null) lblLimit.setFont(lblLimitFont);
        lblLimit.setHorizontalAlignment(0);
        lblLimit.setHorizontalTextPosition(11);
        lblLimit.setText("LiveXAML is limited to projects with no more than 3 XAML files.");
        myPanel.add(lblLimit, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblStatus2 = new JLabel();
        lblStatus2.setHorizontalAlignment(0);
        lblStatus2.setText("Active license detected");
        myPanel.add(lblStatus2, new GridConstraints(5, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 18, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Instructions");
        myPanel.add(label1, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnPurchase = new JButton();
        btnPurchase.setText("Purchase");
        myPanel.add(btnPurchase, new GridConstraints(4, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JTextPane textPane1 = new JTextPane();
        textPane1.setEditable(false);
        textPane1.setEnabled(true);
        Font textPane1Font = this.$$$getFont$$$(null, -1, -1, textPane1.getFont());
        if (textPane1Font != null) textPane1.setFont(textPane1Font);
        textPane1.setOpaque(false);
        textPane1.setText("1) Start debugging with an emulator or physical device\n2) Open any XAML file, modify and save it\n3) You should immediately see the updated UI in your application");
        myPanel.add(textPane1, new GridConstraints(3, 2, 4, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(130, 50), null, 0, false));
        doNotShowStartupCheckBox = new JCheckBox();
        doNotShowStartupCheckBox.setText("Do not show window at startup");
        myPanel.add(doNotShowStartupCheckBox, new GridConstraints(8, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        updateEvenIfNotCheckBox = new JCheckBox();
        updateEvenIfNotCheckBox.setText("Update even if not debugging");
        myPanel.add(updateEvenIfNotCheckBox, new GridConstraints(9, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, Font.BOLD, 20, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("Welcome to LiveSharp!");
        myPanel.add(label2, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JTextPane textPane2 = new JTextPane();
        textPane2.setEditable(false);
        Font textPane2Font = this.$$$getFont$$$(null, -1, 14, textPane2.getFont());
        if (textPane2Font != null) textPane2.setFont(textPane2Font);
        textPane2.setOpaque(false);
        textPane2.setRequestFocusEnabled(true);
        textPane2.setText("Welcome to LiveSharp Rider Plugin. After the initial installation you will be able to develop XAML files in your running application. No need for previewers or design-time data when you can change stuff on the fly!");
        textPane2.setVerifyInputWhenFocusTarget(true);
        myPanel.add(textPane2, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(300, 50), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setIcon(new ImageIcon(getClass().getResource("/icons/icon_128.png")));
        label3.setText("");
        myPanel.add(label3, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-12866603));
        myPanel.add(panel1, new GridConstraints(6, 1, 4, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(4, 3, new Insets(10, 5, 10, 10), -1, -1));
        panel2.setBackground(new Color(-12866603));
        panel1.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(350, -1), null, 0, false));
        final JTextPane textPane3 = new JTextPane();
        textPane3.setBackground(new Color(-12866603));
        textPane3.setForeground(new Color(-1));
        textPane3.setOpaque(false);
        textPane3.setText("This is needed if you activate on more than one computer. It will be generated after you first activate your account.");
        panel2.add(textPane3, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, -1), null, 1, false));
        final JLabel label4 = new JLabel();
        Font label4Font = this.$$$getFont$$$(null, -1, 11, label4.getFont());
        if (label4Font != null) label4.setFont(label4Font);
        label4.setForeground(new Color(-1));
        label4.setText("Email:");
        panel2.add(label4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        final JLabel label5 = new JLabel();
        Font label5Font = this.$$$getFont$$$(null, -1, 11, label5.getFont());
        if (label5Font != null) label5.setFont(label5Font);
        label5.setForeground(new Color(-1));
        label5.setText("Password:");
        panel2.add(label5, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        txtEmail = new JTextField();
        txtEmail.setMargin(new Insets(2, 5, 2, 5));
        panel2.add(txtEmail, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtPassword = new JPasswordField();
        panel2.add(txtPassword, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        btnCopyKey = new JButton();
        btnCopyKey.setActionCommand("CopyKey");
        btnCopyKey.setBackground(new Color(-12866603));
        btnCopyKey.setMargin(new Insets(0, 5, 0, 5));
        btnCopyKey.setText("Copy Access Key");
        panel2.add(btnCopyKey, new GridConstraints(3, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnLoad = new JButton();
        btnLoad.setActionCommand("LoadLicense");
        btnLoad.setBackground(new Color(-12866603));
        btnLoad.setText("Load License");
        panel2.add(btnLoad, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        label6.setText("Settings");
        myPanel.add(label6, new GridConstraints(7, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return myPanel;
    }
}
